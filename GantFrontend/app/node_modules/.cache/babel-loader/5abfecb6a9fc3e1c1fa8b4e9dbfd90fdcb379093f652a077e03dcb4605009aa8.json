{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\molot\\\\Desktop\\\\NewPP2023\\\\GantChart\\\\GantFrontend\\\\app\\\\src\\\\Components\\\\Gantt\\\\Gantt.js\";\nimport React, { Component } from 'react';\nimport axios from 'axios';\nimport './Gantt.css';\nimport { gantt } from 'dhtmlx-gantt';\nimport 'dhtmlx-gantt/codebase/dhtmlxgantt.css';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport default class Gantt extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      data: []\n    };\n  }\n  componentDidMount() {\n    gantt.config.date_format = \"%Y-%m-%d %H:%i\";\n    gantt.config.scales = [{\n      unit: \"month\",\n      step: 1,\n      format: \"%F, %Y\"\n    }, {\n      unit: \"day\",\n      step: 1,\n      format: \"%j, %D\"\n    }];\n    gantt.config.scale_height = 80;\n    gantt.init(this.ganttContainer);\n    gantt.config.columns = [{\n      name: \"text\",\n      label: \"Задачи\",\n      width: \"*\",\n      tree: true\n    }, {\n      name: \"add\",\n      label: \"\",\n      width: \"44\"\n    }, {\n      name: \"checkbox\",\n      label: \"\",\n      width: \"30\"\n    }];\n    gantt.config.lightbox.sections = [{\n      name: \"text\",\n      height: 22,\n      map_to: \"text\",\n      type: \"textarea\",\n      focus: true\n    }, {\n      name: \"description\",\n      height: 70,\n      map_to: \"description\",\n      type: \"textarea\"\n    }, {\n      name: \"time\",\n      height: 72,\n      type: \"time\",\n      map_to: \"auto\"\n    }];\n    gantt.templates.task_row = function (start, end, task) {\n      const checkboxHtml = task.$level > 0 ? `<input type=\"checkbox\" ${task.checked ? 'checked' : ''}>` : '';\n      return `<div class='gantt_row'><div class='gantt_cell gantt_tree_cell'>${gantt.templates.grid_indent(task)}${gantt.templates.grid_file(task)}</div><div class='gantt_cell gantt_tree_content'>${checkboxHtml}${gantt.templates.task_text(start, end, task)}</div></div>`;\n    };\n    gantt.attachEvent(\"onTaskClick\", function (id, e) {\n      if (e.target.tagName.toLowerCase() === \"input\") {\n        const task = gantt.getTask(id);\n        task.checked = !task.checked;\n        gantt.updateTask(id);\n      }\n    });\n    gantt.templates.grid_file = function (obj) {\n      if (obj.$level === 0) return \"<div class='gantt_tree_icon gantt_first'><i class='fas fa-plus'></i></div>\";else return \"<div class='gantt_tree_icon'></div>\";\n    };\n    gantt.templates.grid_file = function (item) {\n      return \"<div class='gantt_tree_icon gantt_file' style='display: none'></div>\";\n    };\n    gantt.templates.grid_folder = function (item) {\n      return `<div \n   class='gantt_tree_icon gantt_folder_${item.$open ? \"open\" : \"closed\"}' style='display: none'>\n   </div>`;\n    };\n    gantt.templates.task_class = function (start, end, task) {\n      if (task.$level === 0) {\n        return \"parent-task\";\n      } else if (task.$level === 1) {\n        return \"child-task\";\n      } else {\n        return \"grandchild-task\";\n      }\n    };\n    axios.get('http://localhost:8000/api/v1/gant/tasks').then(response => {\n      const transformedData = this.transformData(response.data);\n      gantt.parse(transformedData);\n    }).catch(error => {\n      console.error(error);\n    });\n  }\n  transformData(data) {\n    const taskMap = new Map();\n    function transformTask(task) {\n      let parentId = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : 0;\n      const taskId = task.id;\n      taskMap.set(taskId, {\n        id: taskId,\n        text: task.name,\n        start_date: task.planned_start_date,\n        end_date: task.planned_finish_date,\n        progress: 0,\n        open: true,\n        parent: parentId,\n        description: task.description,\n        checked: task.is_completed\n      });\n      if (task.children) {\n        task.children.forEach(child => {\n          transformTask(child, taskId);\n        });\n      }\n    }\n    data.forEach(task => {\n      transformTask(task);\n    });\n    const transformedData = {\n      data: Array.from(taskMap.values())\n    };\n    return transformedData;\n  }\n  render() {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      ref: input => {\n        this.ganttContainer = input;\n      },\n      style: {\n        width: '90%',\n        height: '90%'\n      }\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 123,\n      columnNumber: 13\n    }, this);\n  }\n}","map":{"version":3,"names":["React","Component","axios","gantt","jsxDEV","_jsxDEV","Gantt","constructor","props","state","data","componentDidMount","config","date_format","scales","unit","step","format","scale_height","init","ganttContainer","columns","name","label","width","tree","lightbox","sections","height","map_to","type","focus","templates","task_row","start","end","task","checkboxHtml","$level","checked","grid_indent","grid_file","task_text","attachEvent","id","e","target","tagName","toLowerCase","getTask","updateTask","obj","item","grid_folder","$open","task_class","get","then","response","transformedData","transformData","parse","catch","error","console","taskMap","Map","transformTask","parentId","arguments","length","undefined","taskId","set","text","start_date","planned_start_date","end_date","planned_finish_date","progress","open","parent","description","is_completed","children","forEach","child","Array","from","values","render","ref","input","style","fileName","_jsxFileName","lineNumber","columnNumber"],"sources":["C:/Users/molot/Desktop/NewPP2023/GantChart/GantFrontend/app/src/Components/Gantt/Gantt.js"],"sourcesContent":["import React, {Component} from 'react';\r\nimport axios from 'axios';\r\nimport './Gantt.css'\r\nimport {gantt} from 'dhtmlx-gantt';\r\nimport 'dhtmlx-gantt/codebase/dhtmlxgantt.css';\r\n\r\n\r\nexport default class Gantt extends Component {\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = {\r\n            data: []\r\n        };\r\n    }\r\n\r\n    componentDidMount() {\r\n        gantt.config.date_format = \"%Y-%m-%d %H:%i\";\r\n        gantt.config.scales = [\r\n            {unit: \"month\", step: 1, format: \"%F, %Y\"},\r\n            {unit: \"day\", step: 1, format: \"%j, %D\"}\r\n        ];\r\n        gantt.config.scale_height = 80;\r\n        gantt.init(this.ganttContainer);\r\n        gantt.config.columns = [\r\n            {name: \"text\", label: \"Задачи\", width: \"*\", tree: true},\r\n            {name: \"add\", label: \"\", width: \"44\"},\r\n            {name: \"checkbox\", label: \"\", width: \"30\"},\r\n        ];\r\n        gantt.config.lightbox.sections = [\r\n            {name: \"text\", height: 22, map_to: \"text\", type: \"textarea\", focus: true},\r\n            {name: \"description\", height: 70, map_to: \"description\", type: \"textarea\"},\r\n            {name: \"time\", height: 72, type: \"time\", map_to: \"auto\"},\r\n        ];\r\n        gantt.templates.task_row = function (start, end, task) {\r\n            const checkboxHtml = task.$level > 0 ? `<input type=\"checkbox\" ${task.checked ? 'checked' : ''}>` : '';\r\n            return `<div class='gantt_row'><div class='gantt_cell gantt_tree_cell'>${gantt.templates.grid_indent(task)}${gantt.templates.grid_file(task)}</div><div class='gantt_cell gantt_tree_content'>${checkboxHtml}${gantt.templates.task_text(start, end, task)}</div></div>`;\r\n        };\r\n        gantt.attachEvent(\"onTaskClick\", function (id, e) {\r\n            if (e.target.tagName.toLowerCase() === \"input\") {\r\n                const task = gantt.getTask(id);\r\n                task.checked = !task.checked;\r\n                gantt.updateTask(id);\r\n            }\r\n        });\r\n\r\n        gantt.templates.grid_file = function(obj){\r\n            if(obj.$level === 0)\r\n                return \"<div class='gantt_tree_icon gantt_first'><i class='fas fa-plus'></i></div>\";\r\n            else\r\n                return \"<div class='gantt_tree_icon'></div>\";\r\n        };\r\n\r\n        gantt.templates.grid_file = function (item) {\r\n            return \"<div class='gantt_tree_icon gantt_file' style='display: none'></div>\";\r\n        };\r\n        gantt.templates.grid_folder = function (item) {\r\n            return `<div \r\n   class='gantt_tree_icon gantt_folder_${(item.$open ? \"open\" : \"closed\")}' style='display: none'>\r\n   </div>`;\r\n        };\r\n\r\n        gantt.templates.task_class = function (start, end, task) {\r\n            if (task.$level === 0) {\r\n                return \"parent-task\";\r\n            } else if (task.$level === 1) {\r\n                return \"child-task\";\r\n            } else {\r\n                return \"grandchild-task\"\r\n            }\r\n        }\r\n\r\n        axios.get('http://localhost:8000/api/v1/gant/tasks')\r\n            .then(response => {\r\n                const transformedData = this.transformData(response.data);\r\n                gantt.parse(transformedData);\r\n            })\r\n            .catch(error => {\r\n                console.error(error);\r\n            });\r\n    }\r\n\r\n\r\n    transformData(data) {\r\n        const taskMap = new Map();\r\n\r\n        function transformTask(task, parentId = 0) {\r\n            const taskId = task.id;\r\n\r\n            taskMap.set(taskId, {\r\n                id: taskId,\r\n                text: task.name,\r\n                start_date: task.planned_start_date,\r\n                end_date: task.planned_finish_date,\r\n                progress: 0,\r\n                open: true,\r\n                parent: parentId,\r\n                description: task.description,\r\n                checked: task.is_completed,\r\n            });\r\n\r\n            if (task.children) {\r\n                task.children.forEach((child) => {\r\n                    transformTask(child, taskId);\r\n                });\r\n            }\r\n        }\r\n\r\n\r\n        data.forEach((task) => {\r\n            transformTask(task);\r\n        });\r\n\r\n        const transformedData = {\r\n            data: Array.from(taskMap.values()),\r\n        };\r\n\r\n        return transformedData;\r\n    }\r\n\r\n\r\n    render() {\r\n        return (\r\n            <div\r\n                ref={(input) => {\r\n                    this.ganttContainer = input\r\n                }}\r\n                style={{width: '90%', height: '90%'}}\r\n            ></div>\r\n        );\r\n    }\r\n}\r\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}