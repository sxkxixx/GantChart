{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\molot\\\\Desktop\\\\NewPP2023\\\\GantChart\\\\GantFrontend\\\\app\\\\src\\\\Components\\\\Gantt\\\\Gantt.js\";\nimport React, { Component } from 'react';\nimport axios from 'axios';\nimport { gantt } from 'dhtmlx-gantt';\nimport 'dhtmlx-gantt/codebase/dhtmlxgantt.css';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport default class Gantt extends Component {\n  constructor(props) {\n    super(props);\n    this.transformData = data => {\n      let transformedData = [];\n      data.forEach(task => {\n        transformedData.push({\n          id: task.id,\n          text: task.name,\n          start_date: task.planned_start_date,\n          end_date: task.planned_finish_date,\n          parent: task.parent_id || 0,\n          open: true\n        });\n      });\n      return transformedData;\n    };\n    this.state = {\n      data: []\n    };\n  }\n  componentDidMount() {\n    gantt.config.date_format = \"%Y-%m-%d %H:%i\";\n    gantt.init(this.ganttContainer);\n    gantt.config.columns = [{\n      name: \"text\",\n      label: \"Задачи\",\n      width: \"*\",\n      tree: true\n    }, {\n      name: \"add\",\n      label: \"\",\n      width: 44\n    }];\n    axios.get('http://localhost:8000/api/v1/gant/tasks').then(response => {\n      console.log(response.data);\n      const transformedData = this.transformData(response.data);\n      console.log(transformedData);\n      gantt.parse(transformedData);\n    }).catch(error => {\n      console.error(error);\n    });\n  }\n  render() {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      ref: input => {\n        this.ganttContainer = input;\n      },\n      style: {\n        width: '1200px',\n        height: '600px'\n      }\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 51,\n      columnNumber: 13\n    }, this);\n  }\n}","map":{"version":3,"names":["React","Component","axios","gantt","jsxDEV","_jsxDEV","Gantt","constructor","props","transformData","data","transformedData","forEach","task","push","id","text","name","start_date","planned_start_date","end_date","planned_finish_date","parent","parent_id","open","state","componentDidMount","config","date_format","init","ganttContainer","columns","label","width","tree","get","then","response","console","log","parse","catch","error","render","ref","input","style","height","fileName","_jsxFileName","lineNumber","columnNumber"],"sources":["C:/Users/molot/Desktop/NewPP2023/GantChart/GantFrontend/app/src/Components/Gantt/Gantt.js"],"sourcesContent":["import React, { Component } from 'react';\r\nimport axios from 'axios';\r\nimport { gantt } from 'dhtmlx-gantt';\r\nimport 'dhtmlx-gantt/codebase/dhtmlxgantt.css';\r\n\r\nexport default class Gantt extends Component {\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = {\r\n            data: []\r\n        }\r\n    }\r\n\r\n    componentDidMount() {\r\n        gantt.config.date_format = \"%Y-%m-%d %H:%i\";\r\n        gantt.init(this.ganttContainer);\r\n        gantt.config.columns = [\r\n            {name:\"text\", label:\"Задачи\", width:\"*\", tree:true},\r\n            {name:\"add\", label:\"\", width:44}\r\n        ];\r\n\r\n        axios.get('http://localhost:8000/api/v1/gant/tasks')\r\n            .then(response => {\r\n                console.log(response.data);\r\n                const transformedData = this.transformData(response.data);\r\n                console.log(transformedData);\r\n                gantt.parse(transformedData);\r\n            })\r\n            .catch(error => {\r\n                console.error(error);\r\n            });\r\n    }\r\n\r\n    transformData = (data) => {\r\n        let transformedData = [];\r\n        data.forEach((task) => {\r\n            transformedData.push({\r\n                id: task.id,\r\n                text: task.name,\r\n                start_date: task.planned_start_date,\r\n                end_date: task.planned_finish_date,\r\n                parent: task.parent_id || 0,\r\n                open: true\r\n            });\r\n        });\r\n        return transformedData;\r\n    }\r\n\r\n    render() {\r\n        return (\r\n            <div\r\n                ref={(input) => { this.ganttContainer = input }}\r\n                style={{ width: '1200px', height: '600px' }}\r\n            ></div>\r\n        );\r\n    }\r\n}\r\n"],"mappings":";AAAA,OAAOA,KAAK,IAAIC,SAAS,QAAQ,OAAO;AACxC,OAAOC,KAAK,MAAM,OAAO;AACzB,SAASC,KAAK,QAAQ,cAAc;AACpC,OAAO,uCAAuC;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAE/C,eAAe,MAAMC,KAAK,SAASL,SAAS,CAAC;EACzCM,WAAWA,CAACC,KAAK,EAAE;IACf,KAAK,CAACA,KAAK,CAAC;IAAC,KA0BjBC,aAAa,GAAIC,IAAI,IAAK;MACtB,IAAIC,eAAe,GAAG,EAAE;MACxBD,IAAI,CAACE,OAAO,CAAEC,IAAI,IAAK;QACnBF,eAAe,CAACG,IAAI,CAAC;UACjBC,EAAE,EAAEF,IAAI,CAACE,EAAE;UACXC,IAAI,EAAEH,IAAI,CAACI,IAAI;UACfC,UAAU,EAAEL,IAAI,CAACM,kBAAkB;UACnCC,QAAQ,EAAEP,IAAI,CAACQ,mBAAmB;UAClCC,MAAM,EAAET,IAAI,CAACU,SAAS,IAAI,CAAC;UAC3BC,IAAI,EAAE;QACV,CAAC,CAAC;MACN,CAAC,CAAC;MACF,OAAOb,eAAe;IAC1B,CAAC;IAtCG,IAAI,CAACc,KAAK,GAAG;MACTf,IAAI,EAAE;IACV,CAAC;EACL;EAEAgB,iBAAiBA,CAAA,EAAG;IAChBvB,KAAK,CAACwB,MAAM,CAACC,WAAW,GAAG,gBAAgB;IAC3CzB,KAAK,CAAC0B,IAAI,CAAC,IAAI,CAACC,cAAc,CAAC;IAC/B3B,KAAK,CAACwB,MAAM,CAACI,OAAO,GAAG,CACnB;MAACd,IAAI,EAAC,MAAM;MAAEe,KAAK,EAAC,QAAQ;MAAEC,KAAK,EAAC,GAAG;MAAEC,IAAI,EAAC;IAAI,CAAC,EACnD;MAACjB,IAAI,EAAC,KAAK;MAAEe,KAAK,EAAC,EAAE;MAAEC,KAAK,EAAC;IAAE,CAAC,CACnC;IAED/B,KAAK,CAACiC,GAAG,CAAC,yCAAyC,CAAC,CAC/CC,IAAI,CAACC,QAAQ,IAAI;MACdC,OAAO,CAACC,GAAG,CAACF,QAAQ,CAAC3B,IAAI,CAAC;MAC1B,MAAMC,eAAe,GAAG,IAAI,CAACF,aAAa,CAAC4B,QAAQ,CAAC3B,IAAI,CAAC;MACzD4B,OAAO,CAACC,GAAG,CAAC5B,eAAe,CAAC;MAC5BR,KAAK,CAACqC,KAAK,CAAC7B,eAAe,CAAC;IAChC,CAAC,CAAC,CACD8B,KAAK,CAACC,KAAK,IAAI;MACZJ,OAAO,CAACI,KAAK,CAACA,KAAK,CAAC;IACxB,CAAC,CAAC;EACV;EAiBAC,MAAMA,CAAA,EAAG;IACL,oBACItC,OAAA;MACIuC,GAAG,EAAGC,KAAK,IAAK;QAAE,IAAI,CAACf,cAAc,GAAGe,KAAK;MAAC,CAAE;MAChDC,KAAK,EAAE;QAAEb,KAAK,EAAE,QAAQ;QAAEc,MAAM,EAAE;MAAQ;IAAE;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,QACzC;EAEf;AACJ"},"metadata":{},"sourceType":"module","externalDependencies":[]}