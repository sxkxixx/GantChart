{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\molot\\\\Desktop\\\\NewPP2023\\\\GantChart\\\\GantFrontend\\\\app\\\\src\\\\Components\\\\Gantt\\\\Gantt.js\";\nimport React, { Component } from 'react';\nimport axios from 'axios';\nimport './Gantt.css';\nimport { gantt } from 'dhtmlx-gantt';\nimport 'dhtmlx-gantt/codebase/dhtmlxgantt.css';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport default class Gantt extends Component {\n  constructor(props) {\n    super(props);\n    this.colContent = function (task) {\n      return '<i class=\"fa gantt_button_grid gantt_grid_edit fa-pencil\"' + 'onclick=\"clickGridButton(' + task.id + ', \\'edit\\')\"></i>' + '<i class=\"fa gantt_button_grid gantt_grid_add fa-plus\"' + 'onclick=\"clickGridButton(' + task.id + ', \\'add\\')\"></i>' + '<i class=\"fa gantt_button_grid gantt_grid_delete fa-times\"' + 'onclick=\"clickGridButton(' + task.id + ', \\'delete\\')\"></i>';\n    };\n    this.state = {\n      data: []\n    };\n  }\n  componentDidMount() {\n    gantt.config.date_format = \"%Y-%m-%d %H:%i\";\n    gantt.config.scales = [{\n      unit: \"month\",\n      step: 1,\n      format: \"%F, %Y\"\n    }, {\n      unit: \"day\",\n      step: 1,\n      format: \"%j, %D\"\n    }];\n    gantt.config.scale_height = 80;\n    gantt.init(this.ganttContainer);\n    gantt.config.columns = [{\n      name: \"text\",\n      label: \"Задачи\",\n      width: \"*\",\n      tree: true\n    }, {\n      name: \"add\",\n      label: \"\",\n      width: \"44\"\n    }];\n    gantt.config.lightbox.sections = [{\n      name: \"text\",\n      height: 22,\n      map_to: \"text\",\n      type: \"textarea\",\n      focus: true\n    }, {\n      name: \"description\",\n      height: 70,\n      map_to: \"description\",\n      type: \"textarea\"\n    }, {\n      name: \"time\",\n      height: 72,\n      type: \"time\",\n      map_to: \"auto\"\n    }];\n    gantt.templates.task_class = function (start, end, task) {\n      if (task.$level === 0) {\n        return \"parent-task\";\n      } else if (task.$level === 1) {\n        return \"child-task\";\n      } else {\n        return \"grandchild-task\";\n      }\n    };\n    axios.get('http://localhost:8000/api/v1/gant/tasks').then(response => {\n      const transformedData = this.transformData(response.data);\n      gantt.parse(transformedData);\n    }).catch(error => {\n      console.error(error);\n    });\n  }\n  transformData(data) {\n    const taskMap = new Map();\n    function transformTask(task) {\n      let parentId = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : 0;\n      const taskId = task.id;\n      taskMap.set(taskId, {\n        id: taskId,\n        text: task.name,\n        start_date: task.planned_start_date,\n        end_date: task.planned_finish_date,\n        progress: 0,\n        open: true,\n        parent: parentId,\n        description: task.description\n      });\n      if (task.children) {\n        task.children.forEach(child => {\n          transformTask(child, taskId);\n        });\n      }\n    }\n    data.forEach(task => {\n      transformTask(task);\n    });\n    const transformedData = {\n      data: Array.from(taskMap.values())\n    };\n    return transformedData;\n  }\n  render() {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      ref: input => {\n        this.ganttContainer = input;\n      },\n      style: {\n        width: '1720px',\n        height: '90%'\n      }\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 105,\n      columnNumber: 13\n    }, this);\n  }\n}","map":{"version":3,"names":["React","Component","axios","gantt","jsxDEV","_jsxDEV","Gantt","constructor","props","colContent","task","id","state","data","componentDidMount","config","date_format","scales","unit","step","format","scale_height","init","ganttContainer","columns","name","label","width","tree","lightbox","sections","height","map_to","type","focus","templates","task_class","start","end","$level","get","then","response","transformedData","transformData","parse","catch","error","console","taskMap","Map","transformTask","parentId","arguments","length","undefined","taskId","set","text","start_date","planned_start_date","end_date","planned_finish_date","progress","open","parent","description","children","forEach","child","Array","from","values","render","ref","input","style","fileName","_jsxFileName","lineNumber","columnNumber"],"sources":["C:/Users/molot/Desktop/NewPP2023/GantChart/GantFrontend/app/src/Components/Gantt/Gantt.js"],"sourcesContent":["import React, { Component } from 'react';\r\nimport axios from 'axios';\r\nimport './Gantt.css'\r\nimport { gantt } from 'dhtmlx-gantt';\r\nimport 'dhtmlx-gantt/codebase/dhtmlxgantt.css';\r\n\r\n\r\n\r\nexport default class Gantt extends Component {\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = {\r\n            data: []\r\n        };\r\n    }\r\n\r\n    componentDidMount() {\r\n        gantt.config.date_format = \"%Y-%m-%d %H:%i\";\r\n        gantt.config.scales = [\r\n            {unit: \"month\", step: 1, format: \"%F, %Y\"},\r\n            {unit: \"day\", step: 1, format: \"%j, %D\"}\r\n        ];\r\n        gantt.config.scale_height = 80;\r\n        gantt.init(this.ganttContainer);\r\n        gantt.config.columns = [\r\n            {name: \"text\", label: \"Задачи\", width: \"*\", tree: true},\r\n            {name: \"add\", label: \"\", width: \"44\"},\r\n        ];\r\n        gantt.config.lightbox.sections = [\r\n            { name: \"text\", height: 22, map_to: \"text\", type: \"textarea\", focus: true },\r\n            { name: \"description\", height: 70, map_to: \"description\", type: \"textarea\" },\r\n            { name: \"time\", height: 72, type: \"time\", map_to: \"auto\" },\r\n        ];\r\n\r\n        gantt.templates.task_class = function(start, end, task) {\r\n            if (task.$level === 0) {\r\n                return \"parent-task\";\r\n            } else if (task.$level === 1) {\r\n                return \"child-task\";\r\n            } else {\r\n                return \"grandchild-task\"\r\n            }\r\n        }\r\n\r\n        axios.get('http://localhost:8000/api/v1/gant/tasks')\r\n            .then(response => {\r\n                const transformedData = this.transformData(response.data);\r\n                gantt.parse(transformedData);\r\n            })\r\n            .catch(error => {\r\n                console.error(error);\r\n            });\r\n    }\r\n\r\n    colContent = function (task) {\r\n        return ('<i class=\"fa gantt_button_grid gantt_grid_edit fa-pencil\"'+\r\n            'onclick=\"clickGridButton(' + task.id + ', \\'edit\\')\"></i>' +\r\n            '<i class=\"fa gantt_button_grid gantt_grid_add fa-plus\"'+\r\n            'onclick=\"clickGridButton(' + task.id + ', \\'add\\')\"></i>' +\r\n            '<i class=\"fa gantt_button_grid gantt_grid_delete fa-times\"'+\r\n            'onclick=\"clickGridButton(' + task.id + ', \\'delete\\')\"></i>');\r\n    };\r\n\r\n\r\n\r\n    transformData(data) {\r\n        const taskMap = new Map();\r\n\r\n        function transformTask(task, parentId = 0) {\r\n            const taskId = task.id;\r\n\r\n            taskMap.set(taskId, {\r\n                id: taskId,\r\n                text: task.name,\r\n                start_date: task.planned_start_date,\r\n                end_date: task.planned_finish_date,\r\n                progress: 0,\r\n                open: true,\r\n                parent: parentId,\r\n                description: task.description,\r\n            });\r\n\r\n            if (task.children) {\r\n                task.children.forEach((child) => {\r\n                    transformTask(child, taskId);\r\n                });\r\n            }\r\n        }\r\n\r\n\r\n        data.forEach((task) => {\r\n            transformTask(task);\r\n        });\r\n\r\n        const transformedData = {\r\n            data: Array.from(taskMap.values()),\r\n        };\r\n\r\n        return transformedData;\r\n    }\r\n\r\n\r\n    render() {\r\n        return (\r\n            <div\r\n                ref={(input) => { this.ganttContainer = input }}\r\n                style={{ width: '1720px', height: '90%' }}\r\n            ></div>\r\n        );\r\n    }\r\n}\r\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}