{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\molot\\\\Desktop\\\\NewPP2023\\\\GantChart\\\\GantFrontend\\\\app\\\\src\\\\Components\\\\Gantt\\\\Gantt.js\";\nimport React, { Component } from 'react';\nimport axios from 'axios';\nimport { gantt } from 'dhtmlx-gantt';\nimport 'dhtmlx-gantt/codebase/dhtmlxgantt.css';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport default class Gantt extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      data: []\n    };\n  }\n  componentDidMount() {\n    gantt.config.date_format = \"%Y-%m-%d %H:%i\";\n    gantt.config.scales = [{\n      unit: \"month\",\n      step: 1,\n      format: \"%F, %Y\"\n    }, {\n      unit: \"day\",\n      step: 1,\n      format: \"%j, %D\"\n    }];\n    gantt.config.scale_height = 50;\n    gantt.init(this.ganttContainer);\n    gantt.config.columns = [{\n      name: \"text\",\n      label: \"Задачи\",\n      width: \"*\",\n      tree: true\n    }, {\n      name: \"start_date\",\n      label: \"Начало\",\n      width: \"120\",\n      align: \"center\"\n    }, {\n      name: \"duration\",\n      label: \"Длительность\",\n      width: \"80\",\n      align: \"center\"\n    }, {\n      name: \"end_date\",\n      label: \"Окончание\",\n      width: \"120\",\n      align: \"center\"\n    }, {\n      name: \"add\",\n      label: \"\",\n      width: \"44\"\n    }];\n    axios.get('http://localhost:8000/api/v1/gant/tasks').then(response => {\n      const transformedData = this.transformData(response.data);\n      gantt.parse(transformedData);\n    }).catch(error => {\n      console.error(error);\n    });\n  }\n  transformData(data) {\n    const taskMap = new Map();\n    function transformTask(task) {\n      let parentId = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : 0;\n      const taskId = task.id;\n      taskMap.set(taskId, {\n        id: taskId,\n        text: task.name,\n        start_date: task.planned_start_date,\n        end_date: task.planned_finish_date,\n        progress: 0,\n        open: true,\n        parent: parentId\n      });\n      if (task.children) {\n        task.children.forEach(child => {\n          transformTask(child, taskId);\n        });\n      }\n    }\n    data.forEach(task => {\n      transformTask(task);\n    });\n    const transformedData = {\n      data: Array.from(taskMap.values())\n    };\n    return transformedData;\n  }\n  render() {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      ref: input => {\n        this.ganttContainer = input;\n      },\n      style: {\n        width: '80%',\n        height: '600px'\n      }\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 77,\n      columnNumber: 13\n    }, this);\n  }\n}","map":{"version":3,"names":["React","Component","axios","gantt","jsxDEV","_jsxDEV","Gantt","constructor","props","state","data","componentDidMount","config","date_format","scales","unit","step","format","scale_height","init","ganttContainer","columns","name","label","width","tree","align","get","then","response","transformedData","transformData","parse","catch","error","console","taskMap","Map","transformTask","task","parentId","arguments","length","undefined","taskId","id","set","text","start_date","planned_start_date","end_date","planned_finish_date","progress","open","parent","children","forEach","child","Array","from","values","render","ref","input","style","height","fileName","_jsxFileName","lineNumber","columnNumber"],"sources":["C:/Users/molot/Desktop/NewPP2023/GantChart/GantFrontend/app/src/Components/Gantt/Gantt.js"],"sourcesContent":["import React, { Component } from 'react';\r\nimport axios from 'axios';\r\nimport { gantt } from 'dhtmlx-gantt';\r\nimport 'dhtmlx-gantt/codebase/dhtmlxgantt.css';\r\n\r\nexport default class Gantt extends Component {\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = {\r\n            data: []\r\n        };\r\n    }\r\n\r\n    componentDidMount() {\r\n        gantt.config.date_format = \"%Y-%m-%d %H:%i\";\r\n        gantt.config.scales = [\r\n            {unit: \"month\", step: 1, format: \"%F, %Y\"},\r\n            {unit: \"day\", step: 1, format: \"%j, %D\"}\r\n        ];\r\n        gantt.config.scale_height = 50;\r\n        gantt.init(this.ganttContainer);\r\n        gantt.config.columns = [\r\n            {name: \"text\", label: \"Задачи\", width: \"*\", tree: true},\r\n            {name: \"start_date\", label: \"Начало\", width: \"120\", align: \"center\"},\r\n            {name: \"duration\", label: \"Длительность\", width: \"80\", align: \"center\"},\r\n            {name: \"end_date\", label: \"Окончание\", width: \"120\", align: \"center\"},\r\n            {name: \"add\", label: \"\", width: \"44\"},\r\n        ];\r\n\r\n        axios.get('http://localhost:8000/api/v1/gant/tasks')\r\n            .then(response => {\r\n                const transformedData = this.transformData(response.data);\r\n                gantt.parse(transformedData);\r\n            })\r\n            .catch(error => {\r\n                console.error(error);\r\n            });\r\n    }\r\n\r\n    transformData(data) {\r\n        const taskMap = new Map();\r\n\r\n        function transformTask(task, parentId = 0) {\r\n            const taskId = task.id;\r\n\r\n            taskMap.set(taskId, {\r\n                id: taskId,\r\n                text: task.name,\r\n                start_date: task.planned_start_date,\r\n                end_date: task.planned_finish_date,\r\n                progress: 0,\r\n                open: true,\r\n                parent: parentId,\r\n            });\r\n\r\n            if (task.children) {\r\n                task.children.forEach((child) => {\r\n                    transformTask(child, taskId);\r\n                });\r\n            }\r\n        }\r\n\r\n        data.forEach((task) => {\r\n            transformTask(task);\r\n        });\r\n\r\n        const transformedData = {\r\n            data: Array.from(taskMap.values()),\r\n        };\r\n\r\n        return transformedData;\r\n    }\r\n\r\n\r\n    render() {\r\n        return (\r\n            <div\r\n                ref={(input) => { this.ganttContainer = input }}\r\n                style={{ width: '80%', height: '600px' }}\r\n            ></div>\r\n        );\r\n    }\r\n}\r\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}