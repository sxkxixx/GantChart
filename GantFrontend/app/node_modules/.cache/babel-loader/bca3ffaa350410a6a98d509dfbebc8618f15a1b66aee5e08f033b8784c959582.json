{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\molot\\\\Desktop\\\\NewPP2023\\\\GantChart\\\\GantFrontend\\\\app\\\\src\\\\Components\\\\Gantt\\\\Gantt.js\";\nimport React, { Component } from 'react';\nimport axios from 'axios';\nimport { gantt } from 'dhtmlx-gantt';\nimport 'dhtmlx-gantt/codebase/dhtmlxgantt.css';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction transformData(data) {\n  return data.map(item => {\n    return {\n      id: item.id,\n      text: item.name,\n      start_date: item.planned_start_date,\n      parent: item.children || 0\n    };\n  });\n}\nexport default class Gantt extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      data: []\n    };\n  }\n  componentDidMount() {\n    gantt.config.date_format = \"%Y-%m-%d %H:%i\";\n    gantt.init(this.ganttContainer);\n    gantt.config.columns = [{\n      name: \"text\",\n      label: \"Задачи\",\n      width: \"*\",\n      tree: true\n    }, {\n      name: \"add\",\n      label: \"\",\n      width: 44\n    }];\n    axios.get('http://localhost:8000/api/v1/gant/tasks').then(response => {\n      console.log(response.data);\n      const transformedData = transformData(response.data);\n      this.setState({\n        data: transformedData\n      });\n      gantt.parse(this.state.data);\n    }).catch(error => {\n      console.error(error);\n    });\n  }\n  render() {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      ref: input => {\n        this.ganttContainer = input;\n      },\n      style: {\n        width: '1200px',\n        height: '600px'\n      }\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 47,\n      columnNumber: 13\n    }, this);\n  }\n}","map":{"version":3,"names":["React","Component","axios","gantt","jsxDEV","_jsxDEV","transformData","data","map","item","id","text","name","start_date","planned_start_date","parent","children","Gantt","constructor","props","state","componentDidMount","config","date_format","init","ganttContainer","columns","label","width","tree","get","then","response","console","log","transformedData","setState","parse","catch","error","render","ref","input","style","height","fileName","_jsxFileName","lineNumber","columnNumber"],"sources":["C:/Users/molot/Desktop/NewPP2023/GantChart/GantFrontend/app/src/Components/Gantt/Gantt.js"],"sourcesContent":["import React, { Component } from 'react';\r\nimport axios from 'axios';\r\nimport { gantt } from 'dhtmlx-gantt';\r\nimport 'dhtmlx-gantt/codebase/dhtmlxgantt.css';\r\n\r\nfunction transformData(data) {\r\n    return data.map(item => {\r\n        return {\r\n            id: item.id,\r\n            text: item.name,\r\n            start_date: item.planned_start_date,\r\n            parent: item.children || 0,\r\n        };\r\n    });\r\n}\r\n\r\nexport default class Gantt extends Component {\r\n\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = {\r\n            data: []\r\n        }\r\n    }\r\n    componentDidMount() {\r\n        gantt.config.date_format = \"%Y-%m-%d %H:%i\";\r\n        gantt.init(this.ganttContainer);\r\n        gantt.config.columns = [\r\n            {name:\"text\",       label:\"Задачи\",  width:\"*\", tree:true },\r\n            {name:\"add\",        label:\"\",           width:44 }\r\n        ];\r\n\r\n        axios.get('http://localhost:8000/api/v1/gant/tasks')\r\n            .then(response => {\r\n                console.log(response.data);\r\n                const transformedData = transformData(response.data);\r\n                this.setState({data: transformedData});\r\n                gantt.parse(this.state.data);\r\n            })\r\n            .catch(error => {\r\n                console.error(error);\r\n            });\r\n    }\r\n\r\n    render() {\r\n        return (\r\n            <div\r\n                ref={ (input) => { this.ganttContainer = input } }\r\n                style={ { width: '1200px', height: '600px' } }\r\n            ></div>\r\n        );\r\n    }\r\n}\r\n"],"mappings":";AAAA,OAAOA,KAAK,IAAIC,SAAS,QAAQ,OAAO;AACxC,OAAOC,KAAK,MAAM,OAAO;AACzB,SAASC,KAAK,QAAQ,cAAc;AACpC,OAAO,uCAAuC;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAE/C,SAASC,aAAaA,CAACC,IAAI,EAAE;EACzB,OAAOA,IAAI,CAACC,GAAG,CAACC,IAAI,IAAI;IACpB,OAAO;MACHC,EAAE,EAAED,IAAI,CAACC,EAAE;MACXC,IAAI,EAAEF,IAAI,CAACG,IAAI;MACfC,UAAU,EAAEJ,IAAI,CAACK,kBAAkB;MACnCC,MAAM,EAAEN,IAAI,CAACO,QAAQ,IAAI;IAC7B,CAAC;EACL,CAAC,CAAC;AACN;AAEA,eAAe,MAAMC,KAAK,SAAShB,SAAS,CAAC;EAEzCiB,WAAWA,CAACC,KAAK,EAAE;IACf,KAAK,CAACA,KAAK,CAAC;IACZ,IAAI,CAACC,KAAK,GAAG;MACTb,IAAI,EAAE;IACV,CAAC;EACL;EACAc,iBAAiBA,CAAA,EAAG;IAChBlB,KAAK,CAACmB,MAAM,CAACC,WAAW,GAAG,gBAAgB;IAC3CpB,KAAK,CAACqB,IAAI,CAAC,IAAI,CAACC,cAAc,CAAC;IAC/BtB,KAAK,CAACmB,MAAM,CAACI,OAAO,GAAG,CACnB;MAACd,IAAI,EAAC,MAAM;MAAQe,KAAK,EAAC,QAAQ;MAAGC,KAAK,EAAC,GAAG;MAAEC,IAAI,EAAC;IAAK,CAAC,EAC3D;MAACjB,IAAI,EAAC,KAAK;MAASe,KAAK,EAAC,EAAE;MAAYC,KAAK,EAAC;IAAG,CAAC,CACrD;IAED1B,KAAK,CAAC4B,GAAG,CAAC,yCAAyC,CAAC,CAC/CC,IAAI,CAACC,QAAQ,IAAI;MACdC,OAAO,CAACC,GAAG,CAACF,QAAQ,CAACzB,IAAI,CAAC;MAC1B,MAAM4B,eAAe,GAAG7B,aAAa,CAAC0B,QAAQ,CAACzB,IAAI,CAAC;MACpD,IAAI,CAAC6B,QAAQ,CAAC;QAAC7B,IAAI,EAAE4B;MAAe,CAAC,CAAC;MACtChC,KAAK,CAACkC,KAAK,CAAC,IAAI,CAACjB,KAAK,CAACb,IAAI,CAAC;IAChC,CAAC,CAAC,CACD+B,KAAK,CAACC,KAAK,IAAI;MACZN,OAAO,CAACM,KAAK,CAACA,KAAK,CAAC;IACxB,CAAC,CAAC;EACV;EAEAC,MAAMA,CAAA,EAAG;IACL,oBACInC,OAAA;MACIoC,GAAG,EAAIC,KAAK,IAAK;QAAE,IAAI,CAACjB,cAAc,GAAGiB,KAAK;MAAC,CAAG;MAClDC,KAAK,EAAG;QAAEf,KAAK,EAAE,QAAQ;QAAEgB,MAAM,EAAE;MAAQ;IAAG;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,QAC3C;EAEf;AACJ"},"metadata":{},"sourceType":"module","externalDependencies":[]}