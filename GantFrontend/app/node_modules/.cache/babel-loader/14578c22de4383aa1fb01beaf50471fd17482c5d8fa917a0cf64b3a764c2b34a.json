{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\molot\\\\Desktop\\\\NewPP2023\\\\GantChart\\\\GantFrontend\\\\app\\\\src\\\\Components\\\\Gantt\\\\Gantt.js\";\nimport React, { Component } from 'react';\nimport axios from 'axios';\nimport { gantt } from 'dhtmlx-gantt';\nimport 'dhtmlx-gantt/codebase/dhtmlxgantt.css';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport default class Gantt extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      data: []\n    };\n  }\n  componentDidMount() {\n    gantt.config.date_format = \"%Y-%m-%d %H:%i\";\n    gantt.init(this.ganttContainer);\n    gantt.config.columns = [{\n      name: \"text\",\n      label: \"Задачи\",\n      width: \"*\",\n      tree: true\n    }, {\n      name: \"add\",\n      label: \"\",\n      width: 44\n    }];\n    axios.get('http://localhost:8000/api/v1/gant/tasks').then(response => {\n      const transformedData = this.transformData(response.data);\n      gantt.parse(transformedData);\n    }).catch(error => {\n      console.error(error);\n    });\n  }\n  transformData(data) {\n    const transformedData = {\n      data: []\n    };\n    const taskMap = new Map();\n\n    // Map through the top level tasks\n    data.forEach(task => {\n      const taskId = task.id;\n\n      // Add the task to the task map with its children\n      taskMap.set(taskId, {\n        id: taskId,\n        text: task.name,\n        start_date: task.planned_start_date,\n        end_date: task.planned_finish_date,\n        progress: 0,\n        open: true,\n        parent: 0 // set parent as 0 for top-level tasks\n      });\n\n      // Map through the children tasks\n      task.children.forEach(child => {\n        const childId = child.id;\n\n        // Add the child task to the task map\n        taskMap.set(childId, {\n          id: childId,\n          text: child.name,\n          start_date: child.planned_start_date,\n          end_date: child.planned_finish_date,\n          progress: 0,\n          open: true,\n          parent: taskId // set the parent as the current top-level task\n        });\n      });\n    });\n\n    // Add all the tasks from the task map to the transformed data array\n    taskMap.forEach(task => {\n      transformedData.data.push(task);\n    });\n    return transformedData;\n  }\n  render() {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      ref: input => {\n        this.ganttContainer = input;\n      },\n      style: {\n        width: '80%',\n        height: '600px'\n      }\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 83,\n      columnNumber: 13\n    }, this);\n  }\n}","map":{"version":3,"names":["React","Component","axios","gantt","jsxDEV","_jsxDEV","Gantt","constructor","props","state","data","componentDidMount","config","date_format","init","ganttContainer","columns","name","label","width","tree","get","then","response","transformedData","transformData","parse","catch","error","console","taskMap","Map","forEach","task","taskId","id","set","text","start_date","planned_start_date","end_date","planned_finish_date","progress","open","parent","children","child","childId","push","render","ref","input","style","height","fileName","_jsxFileName","lineNumber","columnNumber"],"sources":["C:/Users/molot/Desktop/NewPP2023/GantChart/GantFrontend/app/src/Components/Gantt/Gantt.js"],"sourcesContent":["import React, { Component } from 'react';\r\nimport axios from 'axios';\r\nimport { gantt } from 'dhtmlx-gantt';\r\nimport 'dhtmlx-gantt/codebase/dhtmlxgantt.css';\r\n\r\nexport default class Gantt extends Component {\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = {\r\n            data: []\r\n        };\r\n    }\r\n\r\n    componentDidMount() {\r\n        gantt.config.date_format = \"%Y-%m-%d %H:%i\";\r\n        gantt.init(this.ganttContainer);\r\n        gantt.config.columns = [\r\n            {name:\"text\", label:\"Задачи\", width:\"*\", tree:true},\r\n            {name:\"add\", label:\"\", width:44}\r\n        ];\r\n\r\n        axios.get('http://localhost:8000/api/v1/gant/tasks')\r\n            .then(response => {\r\n                const transformedData = this.transformData(response.data);\r\n                gantt.parse(transformedData);\r\n            })\r\n            .catch(error => {\r\n                console.error(error);\r\n            });\r\n    }\r\n\r\n\r\n    transformData(data) {\r\n        const transformedData = {\r\n            data: [],\r\n        };\r\n\r\n        const taskMap = new Map();\r\n\r\n        // Map through the top level tasks\r\n        data.forEach((task) => {\r\n            const taskId = task.id;\r\n\r\n            // Add the task to the task map with its children\r\n            taskMap.set(taskId, {\r\n                id: taskId,\r\n                text: task.name,\r\n                start_date: task.planned_start_date,\r\n                end_date: task.planned_finish_date,\r\n                progress: 0,\r\n                open: true,\r\n                parent: 0, // set parent as 0 for top-level tasks\r\n            });\r\n\r\n            // Map through the children tasks\r\n            task.children.forEach((child) => {\r\n                const childId = child.id;\r\n\r\n                // Add the child task to the task map\r\n                taskMap.set(childId, {\r\n                    id: childId,\r\n                    text: child.name,\r\n                    start_date: child.planned_start_date,\r\n                    end_date: child.planned_finish_date,\r\n                    progress: 0,\r\n                    open: true,\r\n                    parent: taskId, // set the parent as the current top-level task\r\n                });\r\n            });\r\n        });\r\n\r\n        // Add all the tasks from the task map to the transformed data array\r\n        taskMap.forEach((task) => {\r\n            transformedData.data.push(task);\r\n        });\r\n\r\n        return transformedData;\r\n    }\r\n\r\n\r\n    render() {\r\n        return (\r\n            <div\r\n                ref={(input) => { this.ganttContainer = input }}\r\n                style={{ width: '80%', height: '600px' }}\r\n            ></div>\r\n        );\r\n    }\r\n}\r\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}