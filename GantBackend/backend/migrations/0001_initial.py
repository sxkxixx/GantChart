# Generated by Django 4.1.7 on 2023-06-10 13:20

from django.db import migrations, models
import django.db.models.deletion


class Migration(migrations.Migration):

    initial = True

    dependencies = [
    ]

    operations = [
        migrations.CreateModel(
            name='UralapiEventuts',
            fields=[
                ('id', models.BigAutoField(primary_key=True, serialize=False)),
                ('title', models.CharField(max_length=100)),
                ('start_date', models.DateField(blank=True, null=True)),
                ('end_date', models.DateField(blank=True, null=True)),
            ],
            options={
                'db_table': 'uralapi_eventuts',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='UralapiProject',
            fields=[
                ('id', models.BigAutoField(primary_key=True, serialize=False)),
                ('title', models.CharField(max_length=100)),
                ('start_date', models.DateField(blank=True, null=True)),
                ('end_date', models.DateField(blank=True, null=True)),
            ],
            options={
                'db_table': 'uralapi_project',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='UralapiTeam',
            fields=[
                ('id', models.BigAutoField(primary_key=True, serialize=False)),
                ('title', models.CharField(max_length=200)),
                ('team_chat', models.CharField(blank=True, max_length=200, null=True)),
                ('teg', models.CharField(max_length=200, unique=True)),
            ],
            options={
                'db_table': 'uralapi_team',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='UralapiUser',
            fields=[
                ('id', models.BigAutoField(primary_key=True, serialize=False)),
                ('password', models.CharField(max_length=128)),
                ('last_login', models.DateTimeField(blank=True, null=True)),
                ('is_superuser', models.IntegerField()),
                ('first_name', models.CharField(max_length=150)),
                ('last_name', models.CharField(max_length=150)),
                ('is_staff', models.IntegerField()),
                ('is_active', models.IntegerField()),
                ('date_joined', models.DateTimeField()),
                ('username', models.CharField(blank=True, max_length=100, null=True)),
                ('email', models.CharField(max_length=254, unique=True)),
                ('patronymic', models.CharField(blank=True, max_length=100, null=True)),
                ('image', models.CharField(blank=True, max_length=100, null=True)),
            ],
            options={
                'db_table': 'uralapi_user',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='Role',
            fields=[
                ('id', models.SmallAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='Role ID')),
                ('name', models.CharField(max_length=31, unique=True, verbose_name='Role Name')),
                ('created_at', models.DateTimeField(auto_now_add=True, verbose_name='Время создания')),
                ('updated_at', models.DateTimeField(auto_now=True, verbose_name='Время обновления')),
            ],
            options={
                'db_table': 'roles',
            },
        ),
        migrations.CreateModel(
            name='Status',
            fields=[
                ('id', models.SmallAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID статуса')),
                ('name', models.CharField(max_length=31, unique=True, verbose_name='Название статуса')),
                ('created_at', models.DateTimeField(auto_now_add=True, verbose_name='Время создания')),
                ('updated_at', models.DateTimeField(auto_now=True, verbose_name='Время обновления')),
            ],
            options={
                'db_table': 'statuses',
            },
        ),
        migrations.CreateModel(
            name='Task',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID задачи')),
                ('project_id', models.IntegerField()),
                ('team_id', models.IntegerField()),
                ('name', models.CharField(max_length=31, verbose_name='Название задачи')),
                ('description', models.CharField(blank=True, max_length=255, null=True, verbose_name='Описание задачи')),
                ('is_on_kanban', models.BooleanField(default=True, verbose_name='Отображение на канбане')),
                ('is_completed', models.BooleanField(default=False, verbose_name='Готовность задачи')),
                ('planned_start_date', models.DateField(verbose_name='Время начала задачи')),
                ('planned_final_date', models.DateField(verbose_name='Время окончания задачи')),
                ('deadline', models.DateField(verbose_name='Жесткий дедлайн')),
                ('completed_at', models.DateField(blank=True, null=True, verbose_name='Время завершения')),
                ('created_at', models.DateTimeField(auto_now_add=True, verbose_name='Время создания')),
                ('updated_at', models.DateTimeField(auto_now=True, verbose_name='Время обновления')),
                ('parent_id', models.ForeignKey(blank=True, db_column='parent_id', null=True, on_delete=django.db.models.deletion.PROTECT, to='backend.task', verbose_name='Ссылка на родительскую задачу')),
                ('status_id', models.ForeignKey(db_column='status_id', on_delete=django.db.models.deletion.PROTECT, to='backend.status')),
            ],
            options={
                'db_table': 'tasks',
            },
        ),
        migrations.CreateModel(
            name='Stage',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID подэтапа')),
                ('description', models.CharField(max_length=255, verbose_name='Описание этапа')),
                ('is_ready', models.BooleanField(default=False, verbose_name='Подэтап выполнен')),
                ('created_at', models.DateTimeField(auto_now_add=True, verbose_name='Время создания')),
                ('updated_at', models.DateTimeField(auto_now=True, verbose_name='Время обновления')),
                ('task_id', models.ForeignKey(db_column='task_id', on_delete=django.db.models.deletion.CASCADE, to='backend.task')),
            ],
            options={
                'db_table': 'stages',
            },
        ),
        migrations.CreateModel(
            name='Executor',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID исполнителя')),
                ('user_id', models.IntegerField()),
                ('time_spent', models.TimeField(verbose_name='Время выполнения задачи')),
                ('created_at', models.DateTimeField(auto_now_add=True, verbose_name='Время создания')),
                ('updated_at', models.DateTimeField(auto_now=True, verbose_name='Время обновления')),
                ('role_id', models.ForeignKey(db_column='role_id', on_delete=django.db.models.deletion.CASCADE, to='backend.role')),
                ('task_id', models.ForeignKey(db_column='task_id', on_delete=django.db.models.deletion.CASCADE, to='backend.task')),
            ],
            options={
                'db_table': 'executors',
            },
        ),
        migrations.CreateModel(
            name='Comment',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID комментария')),
                ('user_id', models.IntegerField()),
                ('content', models.CharField(max_length=255, verbose_name='Текст комментария')),
                ('created_at', models.DateTimeField(auto_now_add=True, verbose_name='Время создания')),
                ('updated_at', models.DateTimeField(auto_now=True, verbose_name='Время обновления')),
                ('task_id', models.ForeignKey(db_column='task_id', on_delete=django.db.models.deletion.CASCADE, to='backend.task')),
            ],
            options={
                'db_table': 'comments',
            },
        ),
    ]
